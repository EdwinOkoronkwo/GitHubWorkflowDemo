name: Release Process

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up JDK (you can change the version depending on the Java version you're using)
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: ''

      # Step 3: Build the Java project
      - name: Build the project
        run: |
          ./mvnw clean package  # If you're using Maven, this will build the project and create a JAR file
          ls -l target/  # This will list files in the target directory, you should see the .jar file

      # Step 4: Upload the JAR file as a release artifact
      - name: Upload Release Artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-project-v1.0.0-jar
          path: target/*.jar

  release:
    runs-on: ubuntu-latest
    needs: build  # Ensures that the release job runs only after the build job is successful

    steps:
      # Step 1: Checkout code again to get the tag context
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Create the release on GitHub
      - name: Create a GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
